<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="org.kosta.finalproject.lego.mapper.CommunityBoardMapper">
	<insert id="posting" parameterType="org.kosta.finalproject.lego.vo.BoardVO">
		insert into board(board_no,board_title,board_content,category_no,hits,board_date,likes,id) values(board_seq.nextval,#{boardTitle},#{boardContent},#{bcvo.categoryNo},#{hits},sysdate,#{likes},#{mvo.id})
	</insert> 
	
	<select id="findBCVO" parameterType="int" resultType="org.kosta.finalproject.lego.vo.BoardCategoryVO">
		select category_name, category_no from board_category where category_no=#{value}
	</select>
	
	<resultMap type="BoardVO" id="memberResultMap">
		<result column="name" property="mvo.name"/>
		<result column="id" property="mvo.id"/>
		<result column="category_no" property="bcvo.categoryNo"/>
		<result column="category_name" property="bcvo.categoryName"/>
	</resultMap>
	
	<select id="findAllCommunityList" parameterType="hashmap"  resultMap="memberResultMap" resultType="org.kosta.finalproject.lego.vo.BoardVO">
			
		select rnum,board_no,category_no,category_name,board_title,name,hits,board_date,likes
		from (
		select ROW_NUMBER() OVER(ORDER BY b.board_no DESC) as rnum , b.board_no,b.board_title,b.hits, m.name,b.board_date,b.likes,c.category_no,c.category_name
		from board b, member m ,board_category c
		where b.category_no=#{categoryNo}
		and b.id=m.id 
		and c.category_no = b.category_no
		order by board_no desc
		)
		WHERE rnum BETWEEN #{pagination.startRowNumber} and #{pagination.endRowNumber}
			
			
			<!-- SELECT b.rnum,b.board_no,b.board_title,b.board_date,b.hits,b.likes
			FROM(
			SELECT ROW_NUMBER() OVER(ORDER BY board_no DESC) as rnum ,board_no, category_no,board_title,board_date,likes,hits,id
			FROM BOARD
			where category_no ={bcvo.categoryNo}) b, member m
			WHERE b.id=m.id AND rnum between #{pagination.startRowNumber} and #{endRowNumber} AND b.category_no = {bcvo.categoryNo} -->
	</select>
	
<!-- 	<resultMap type="org.kosta.finalproject.lego.vo.BoardVO" id="categoryResultMap" extends="memberResultMap">
		<result column="category_no" property="bcvo.categroyNo"/>
		<result column="category_name" property="bcvo.categoryName"/>
	</resultMap> -->
	
	<select id="findBoardDetailByBoardNo" parameterType="int" resultMap="memberResultMap" resultType="org.kosta.finalproject.lego.vo.BoardVO">
		select b.*,m.*,bc.*
		from board b, member m, board_category bc
		where b.id=m.id
		and bc.category_no = b.category_no
		and b.board_no=#{value}
	</select>
	
	<update id="updateByBoardVO" parameterType="org.kosta.finalproject.lego.vo.BoardVO"  >
		UPDATE board SET board_title=#{boardTitle},board_content=#{boardContent}, category_no=#{bcvo.categoryNo} WHERE board_no =#{boardNo}
	</update>
	
	<delete id="deleteByBoardVO" parameterType="org.kosta.finalproject.lego.vo.BoardVO">
		DELETE FROM board WHERE board_no = #{boardNo}
	</delete>
	
	<insert id="writeComment" parameterType="org.kosta.finalproject.lego.vo.CommentVO">
		insert into board_comment(comment_no,comment_content,comment_date,board_no,id) values(board_comment_seq.nextval,#{commentContent},sysdate,#{bvo.boardNo},#{mvo.id})
	</insert>
	
		<resultMap type="org.kosta.finalproject.lego.vo.CommentVO" id="memberAndBoardResultMap">
		<result column="board_no" property="bvo.boardNo"/>
		<result column="board_title" property="bvo.boardTitle"/>
		<result column="name" property="mvo.name"/>
		<result column="id" property="mvo.id"/>
		<result column="authority" property="authority.authority"/>
		<result column="username" property="authority.username"/>
	</resultMap>
	
	<select id="findCommentList" resultType="org.kosta.finalproject.lego.vo.CommentVO" resultMap="memberAndBoardResultMap">
		select cm.comment_content, cm.comment_no,cm.comment_date , m.name, m.id, a.authority, a.username
		from  board b, member m, board_comment cm, authorities a
		where b.board_no=cm.board_no
		and a.username = m.id 
		and m.id=cm.id
		and b.board_no=#{value}
		
<!-- 		
		마스터 표시 전 
		
		select cm.comment_content, cm.comment_no,cm.comment_date , m.name, m.id
		from  board b, member m, board_comment cm
		where b.board_no=cm.board_no
		and m.id=cm.id -->
	</select>



	<update id="updateHits" parameterType="int">
		UPDATE board SET hits = hits+1 WHERE board_no =#{value}
	</update>
	
	<delete id="deleteComment" parameterType="int">
		DELETE FROM board_comment WHERE comment_no =#{value}
	</delete>
	
	<update id="likesUp" parameterType="int">
		UPDATE board SET likes = likes+1 WHERE board_no =#{value}
	</update>
	
	<delete id="likesDown" parameterType="int">
		UPDATE board SET likes = likes -1 WHERE board_no =#{value}
	</delete>
	
	<select id="findCommunityListByTitle" resultType="org.kosta.finalproject.lego.vo.BoardVO" resultMap="memberResultMap" >
		select b.* , m.*,c.*
			from board b, member m, board_category c
			WHERE board_title LIKE '%' || #{KEYWORD} || '%'
			and c.category_no = b.category_no
			and b.id=m.id order by board_no desc
	</select>
	
	<select id="findCommunityListByName"  resultType="org.kosta.finalproject.lego.vo.BoardVO" resultMap="memberResultMap" >
			select b.* , m.*,c.*
			from board b, member m, board_category c
			WHERE name LIKE '%' || #{KEYWORD} || '%'
			and c.category_no = b.category_no
			and b.id=m.id order by board_no desc
	</select>
	
	<select id="getTotalPostCount" resultType="int">
		select count(*)from board where category_no=#{value}
	</select>
	
</mapper>