<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="org.kosta.finalproject.lego.mapper.MasterMyPageMapper">
	<update id="updateMember" parameterType="org.kosta.finalproject.lego.vo.MemberVO">
		update member set password=#{password},name=#{name},address=#{address},tel=#{tel} where id=#{id}
	</update>
	<update id="updateMaster" parameterType="org.kosta.finalproject.lego.vo.MasterVO">
		update master set specifications=#{specifications},career=#{career} where id=#{id}
	</update>
	<select id="findMasterDetailList" resultType="org.kosta.finalproject.lego.vo.MasterVO">
   		select id,career,category_no,specifications from master where id =#{value}
   </select>
   
   <select id="findMasterCategory" >
	select distinct s.skills,d.days,t.times,m.id
	from(
	select *
	from master_detail m,skills s
	where m.id = #{value}
	and m.skills_id>0
	and m.skills_id = s.skills_id
	)s, (select *
	from master_detail m,times t 
	where m.id = #{value}
	and m.times_id>0 
	and m.times_id = t.times_id
	)t, (select * 
	from master_detail m,days d 
	where m.id = #{value}
	and m.days_id>0 
	and m.days_id = d.days_id
	)d, master_detail m
	where m.id = #{value}
	</select>

   <resultMap type="org.kosta.finalproject.lego.vo.BookingVO" id="BookingResult">
   		<result column="member_id" property="mvo.id"/>
   		<result column="name" property="mvo.name" />	
   </resultMap>

	 <resultMap type="org.kosta.finalproject.lego.vo.ReviewVO" id="ReviewResult">
   		<result column="id" property="mvo.id"/>
   		<result column="name" property="mvo.name" />	
   </resultMap>
   
   <resultMap type="BoardVO" id="BoardCategoryResultMap">
   		<result column="category_name" property="bcvo.categoryName" />
   		<result column="category_no" property="bcvo.categoryNo" />
   	</resultMap>
   	
   	<resultMap type="org.kosta.finalproject.lego.vo.MessageVO" id="MessageResult">
   		<result column="id" property="sendMvo.id"/>
   		<result column="name" property="sendMvo.name"/>
   		<result column="image_name" property="imageVo.imageName"/>
   	</resultMap>
   	
   	<resultMap type="org.kosta.finalproject.lego.vo.MessageVO" id="MemberResult">
		<result column="name" property="reMvo.name"/>
		<result column="receive_id" property="reMvo.id"/>
	</resultMap>
	<resultMap type="org.kosta.finalproject.lego.vo.ReviewVO" id="score">
		<result column="name" property="mvo.name"/>
		<result column="id" property="mvo.id"/>
	</resultMap>
   	
   <select id ="findMyBoard" resultType="org.kosta.finalproject.lego.vo.BoardVO" resultMap="BoardCategoryResultMap">
   		select rnum,board_no,board_title,category_name,category_no
		from 
		(
		select row_number() over(order by b.board_no desc) as rnum, b.board_no, b.board_title, c.category_name, c.category_no
		from board b, board_category c
		where b.id = #{id}
		and c.category_no = b.category_no
		)
		where rnum between #{pagination.startRowNumber} and #{pagination.endRowNumber}
   	</select>
   	
   	<select id="findMyBoardTotalList" resultType="int" parameterType="string">
   	select count(*)
	from
	(
	select b.board_no, b.board_title, c.category_name, c.category_no
	from board b, board_category c
	where b.id = #{value}
	and c.category_no = b.category_no
	)
   	</select>
   	
   	
   	
   	<select id="findMyBooking" resultType="org.kosta.finalproject.lego.vo.BookingVO" resultMap="BookingResult">
	select rnum,name,booking_no,booking_day,booking_content,member_id
	from 
	(
	select row_number() over(order by b.booking_no desc) as rnum, m.name, b.booking_no, b.booking_day,b.booking_content, b.member_id
	from member m, booking b
	where m.id = b.member_id
	and b.master_id = #{id}
	)where rnum between #{pagination.startRowNumber} and #{pagination.endRowNumber}
	
	</select>
	<select id="findBookingTotalList" resultType="int" parameterType="string">
	select count(*)
	from
	(
	select m.name, b.booking_no, b.booking_day,b.booking_content, b.member_id
	from member m, booking b
	where m.id = b.member_id
	and b.master_id = #{value}
	)
</select>

	
   	<select id="findMyBookingDetail" resultType="org.kosta.finalproject.lego.vo.BookingVO" resultMap="BookingResult">
		select b.booking_no,b.booking_day,b.booking_content,b.master_id,b.member_id,m.name 
		from booking b,member m 
		where booking_no=#{value}
		and m.id=b.member_id		
	</select>
	
	<select id="findMyReview1" resultType="org.kosta.finalproject.lego.vo.ReviewVO" resultMap="ReviewResult">
	select r.id, r.score, r.review_content, m.name
	from review r, member m
	where r.id = m.id
	and r.master_id = #{value}
	</select>
	
	<select id="findMyReview" parameterType="hashmap"  resultType="org.kosta.finalproject.lego.vo.ReviewVO" resultMap="ReviewResult">
	select rnum,score,review_content,id,name
	from 
	(
	select row_number() over(order by review_no desc) as rnum, r.score, r.review_content, r.id, m.name
	from review r, member m
	where r.id = m.id
	and r.master_id = #{id} 
	)
	where rnum between #{pagination.startRowNumber} and #{pagination.endRowNumber}
	</select>
	
	<select id="findTotalList" resultType="int" parameterType="string">
	select count(*)
	from 
	(
	select r.id, r.score, r.review_content, m.name
	from review r, member m
	where r.id = m.id
	and r.master_id = #{value}
	)
	</select>
	
	<select id="findMyMessage" resultType="org.kosta.finalproject.lego.vo.MessageVO" resultMap="MessageResult">
	select ms.id, ms.receive_id as id,m.name,i.image_name
	from message ms, member m , images i
	where ms.receive_id = #{value}
	and ms.id=m.id
	and ms.id=i.id(+)
	group by ms.id,ms.receive_id,m.name,i.image_name
	</select>
	
	<select id="findMyMessageDetail" resultType="org.kosta.finalproject.lego.vo.MessageVO" parameterType="org.kosta.finalproject.lego.vo.MessageVO" resultMap="MemberResult">
	select ms.message_no,ms.message_content, ms.receive_id, ms.receive_date,m.name
         from message ms, member m 
         where ms.id=#{sendMvo.id}
         and ms.receive_id=#{reMvo.id}
         and ms.receive_id=m.id
         
         union all
         
         select ms.message_no,ms.message_content, ms.receive_id, ms.receive_date,m.name
         from message ms, member m 
         where ms.id=#{reMvo.id}
         and ms.receive_id=#{sendMvo.id}
         and ms.receive_id=m.id
         
         order by receive_date asc
	</select>
	
	<insert id="masterSendMessage" parameterType="String">
	insert into message(message_no, message_content, id,receive_id,receive_date) values(message_no_seq.nextval, #{messageContent},#{sendMvo.id},#{reMvo.id},sysdate)
	</insert>
	<resultMap type="org.kosta.finalproject.lego.vo.ImageVO" id="imageResult">
		<result column="id" property="memberVO.id"/>
	</resultMap>
	<select id="getImageId" parameterType="string" resultType="org.kosta.finalproject.lego.vo.ImageVO" resultMap="imageResult">
		select * from images where id=#{value}
	</select>
	
	<select id="MyCategory" resultType="org.kosta.finalproject.lego.vo.CategoryVO">
	select c.lesson_sort from master m,category c where id = #{value} and m.category_no = c.category_no
	</select>
	
	<select id="MySkills" resultType="org.kosta.finalproject.lego.vo.SkillsVO">
	select s.skills from master_detail m,skills s where m.id = #{value} and m.skills_id>0 and m.skills_id = s.skills_id
	</select>
	
	<select id="MyReview" resultType="org.kosta.finalproject.lego.vo.ReviewVO">
	select nvl(round(avg(r.score),1),0) as score from review r where master_id=#{value}
	</select>
	
</mapper>